// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.25.3
// source: findito.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	FinditoService_ReportFoundItem_FullMethodName       = "/server.FinditoService/ReportFoundItem"
	FinditoService_SearchItemsAlongRoute_FullMethodName = "/server.FinditoService/SearchItemsAlongRoute"
)

// FinditoServiceClient is the client API for FinditoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FinditoServiceClient interface {
	ReportFoundItem(ctx context.Context, in *ReportFoundItemRequest, opts ...grpc.CallOption) (*ReportFoundItemResponse, error)
	SearchItemsAlongRoute(ctx context.Context, in *SearchItemsAlongRouteRequest, opts ...grpc.CallOption) (*SearchItemsAlongRouteResponse, error)
}

type finditoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFinditoServiceClient(cc grpc.ClientConnInterface) FinditoServiceClient {
	return &finditoServiceClient{cc}
}

func (c *finditoServiceClient) ReportFoundItem(ctx context.Context, in *ReportFoundItemRequest, opts ...grpc.CallOption) (*ReportFoundItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ReportFoundItemResponse)
	err := c.cc.Invoke(ctx, FinditoService_ReportFoundItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finditoServiceClient) SearchItemsAlongRoute(ctx context.Context, in *SearchItemsAlongRouteRequest, opts ...grpc.CallOption) (*SearchItemsAlongRouteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchItemsAlongRouteResponse)
	err := c.cc.Invoke(ctx, FinditoService_SearchItemsAlongRoute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinditoServiceServer is the server API for FinditoService service.
// All implementations must embed UnimplementedFinditoServiceServer
// for forward compatibility.
type FinditoServiceServer interface {
	ReportFoundItem(context.Context, *ReportFoundItemRequest) (*ReportFoundItemResponse, error)
	SearchItemsAlongRoute(context.Context, *SearchItemsAlongRouteRequest) (*SearchItemsAlongRouteResponse, error)
	mustEmbedUnimplementedFinditoServiceServer()
}

// UnimplementedFinditoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedFinditoServiceServer struct{}

func (UnimplementedFinditoServiceServer) ReportFoundItem(context.Context, *ReportFoundItemRequest) (*ReportFoundItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportFoundItem not implemented")
}
func (UnimplementedFinditoServiceServer) SearchItemsAlongRoute(context.Context, *SearchItemsAlongRouteRequest) (*SearchItemsAlongRouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchItemsAlongRoute not implemented")
}
func (UnimplementedFinditoServiceServer) mustEmbedUnimplementedFinditoServiceServer() {}
func (UnimplementedFinditoServiceServer) testEmbeddedByValue()                        {}

// UnsafeFinditoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FinditoServiceServer will
// result in compilation errors.
type UnsafeFinditoServiceServer interface {
	mustEmbedUnimplementedFinditoServiceServer()
}

func RegisterFinditoServiceServer(s grpc.ServiceRegistrar, srv FinditoServiceServer) {
	// If the following call pancis, it indicates UnimplementedFinditoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&FinditoService_ServiceDesc, srv)
}

func _FinditoService_ReportFoundItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportFoundItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinditoServiceServer).ReportFoundItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinditoService_ReportFoundItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinditoServiceServer).ReportFoundItem(ctx, req.(*ReportFoundItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinditoService_SearchItemsAlongRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchItemsAlongRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinditoServiceServer).SearchItemsAlongRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinditoService_SearchItemsAlongRoute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinditoServiceServer).SearchItemsAlongRoute(ctx, req.(*SearchItemsAlongRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FinditoService_ServiceDesc is the grpc.ServiceDesc for FinditoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FinditoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "server.FinditoService",
	HandlerType: (*FinditoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportFoundItem",
			Handler:    _FinditoService_ReportFoundItem_Handler,
		},
		{
			MethodName: "SearchItemsAlongRoute",
			Handler:    _FinditoService_SearchItemsAlongRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "findito.proto",
}
